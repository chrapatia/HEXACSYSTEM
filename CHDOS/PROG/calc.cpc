//
' MIT License
'
' Copyright (c) 2020 Chrapati LAGAHIM and contributors of HEXAC.
'
' Permission is hereby granted, free of charge, to any person obtaining a copy
' of this software and associated documentation files (the "Software"), to deal
' in the Software without restriction, including without limitation the rights
' to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
' copies of the Software, and to permit persons to whom the Software is
' furnished to do so, subject to the following conditions:
'
' The above copyright notice and this permission notice shall be included in all
' copies or substantial portions of the Software.
'
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
' IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
' FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
' AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
' LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
' OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
' SOFTWARE.
//

declare/ addition()
declare/ substraction()
declare/ multiplication()
declare/ division()

:menu:

txt/ cheeseDOS calcualtor.
txt/ Please choose a math operation : addition, substraction, multiplication, division. If you want back on cheeseDOS menu, tape exit. /#R
set/  /q operation_math

if/ "%operation_math%" == "addition" then:
    /F: addition()
end/ if

if/ "%operation_math%" == "substraction" then:
    /F: substraction()
end/ if

if/ "%operation_math%" == "multiplication" then:
    /F: multiplication()
end/ if

if/ "%operation_math%" == "division" then:
    /F: division()
end/ if

if/ "%operation_math%" == "exit" then:
    txt/ Okay. Bye.
    exe/ & OS/HEXAC/CHDOS/SYSTEM/ENGINE/ssw_eng.cpc
    stop/
end/ if

goto/ menu

function/ addition()
    txt/ Please press a first number : /#R
    set/ /q first_num_add
    txt/ Please press a second number : /#R
    set/ /q second_num_add

    set/ result_add = /C(%first_num_add% + %second_num_add%)
    txt/ %result_add%
end/ function

function/ substraction()
    txt/ Please press a first number : /#R
    set/ /q first_num_sub
    txt/ Please press a second number : /#R
    set/ /q second_num_sub

    set/ result_sub = /C(%first_num_sub% + %second_num_sub%)
    txt/ %result_sub%
end/ function

function/ multiplication()
    txt/ Please press a first number : /#R
    set/ /q first_num_mul
    txt/ Please press a second number : /#R
    set/ /q second_num_mul

    set/ result_mul = /C(%first_num_mul% + %second_num_mul%)
    txt/ %result_mul%
end/ function

function/ division()
    txt/ Please press a first number : /#R
    set/ /q first_num_div
    txt/ Please press a second number : /#R
    set/ /q second_num_div

    set/ result_div = /C(%first_num_div% + %second_num_div%)
    txt/ %result_div%
end/ function


